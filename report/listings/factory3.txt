pub struct Factory {
  container: Container,
}

impl responders::Responder for Factory {
    fn new() -> Factory {
      let mut c = Container::new();
      let count = Rc::new(RefCell::new(0));
      c.add("count", count);
      Factory { container: c }
    }

    fn handle(&mut self, request: &tiny_http::Request)
      -> tiny_http::ResponseBox {
        let url_parts =
          util::strip_url_prefix(request.url(), "/factory");

        self.container.add("url_parts", url_parts);
        let count: Rc<RefCell<i32>> =
          self.container.resolve("count");
        *count.borrow_mut() += 1;
        util::success(&format!("Count {:?}", count))
    }
}

